syntax = "proto3";
package gpmv1;

option go_package = "github.com/gpm2/gpm/proto/apis/gpm/v1;gpmv1";

message Service {
  // 服务名称
  // +gen:required
  string name = 1;
  // 执行器路径
  // +gen:required
  string bin = 2;
  // 服务启动参数
  repeated string args = 3;
  // 服务进程 id
  int64 pid = 4;
  // 服务目录
  string dir = 5;
  // 服务环境变量
  map<string, string> env = 6;
  // 服务系统参数
  SysProcAttr sysProcAttr = 7;
  // 服务进程日志配置
  ProcLog log = 8;
  // 服务版本
  string version = 9;
  // 是否自启动, 默认为 false
  int32 autoRestart = 10;
  // 创建时间
  int64 creationTimestamp = 21;
  // 修改时间
  int64 updateTimestamp = 22;
  // 启动时间
  int64 startTimestamp = 23;
  // 服务状态
  // +gen:enum=[init,running,stopped,failed,upgrading]
  string status = 24;
  // 服务状态为 failed 的错误信息
  string msg = 25;
  // 服务资源占用情况
  Stat stat = 26;
}

message SysProcAttr {
  // 执行命令时所在的根目录
  string chroot = 1;
  // 执行服务时所用的 uid (windows 无效)
  int32 uid = 2;
  // uid 对应的用户名称
  string user = 3;
  // 执行服务时所有的 gid (windows 无效)
  int32 gid = 4;
  // gid 对应的用户组
  string group = 5;
}

message ServiceSpec {
  // 服务名称
  // +gen:required
  string name = 1;
  // 执行器路径
  // +gen:required
  string bin = 2;
  // 服务启动参数
  repeated string args = 3;
  // 服务家目录
  string dir = 4;
  // 服务环境变量
  map<string, string> env = 5;
  // 服务系统参数
  gpmv1.SysProcAttr sysProcAttr = 6;
  // 服务日志配置
  gpmv1.ProcLog log = 7;
  // 服务版本
  string version = 8;
  // 是否自启动, 默认为 false
  int32 autoRestart = 9;
}

message ProcLog {
  // 日志过期时间(天)
  // +gen:default=30
  int32 expire = 1;
  // 日志最大容量，超过此容量则拆分日志
  int64 maxSize = 2;
}

message ServiceLog {
  string text = 1;
  string error = 2;
  int64 timestamp = 3;
}

message Stat {
  // cpu 占用百分比
  double cpuPercent = 1;
  // 内存占用, rss
  uint64 memory = 2;
  // 内存占用百分比
  float memPercent = 3;
}

message GpmInfo {
  string version = 1;
  string gitCommit = 2;
  int64 buildTime = 3;
  string goos = 4;
  string arch = 5;
  string gov = 6;
}

message Package {
  // +gen:required
  string package = 1;
  // +gen:required
  int64 total = 2;
  bytes chunk = 3;
  bool isOk = 4;
}

message InstallServiceResult {
  bool isOk = 1;
  string error = 2;
}

message UpgradeServiceResult {
  bool isOk = 1;
  string error = 2;
}

message ServiceVersion {
  string name = 1;
  string version = 2;
  int64 timestamp = 3;
}

message FileInfo {
  string name = 1;
  int64 size = 2;
  string mode = 3;
  int64 modTime = 4;
  bool IsDir = 5;
}

message ExecIn {
  // +gen:required
  string name = 1;
  repeated string args = 2;
  map<string, string> env = 3;
  int32 uid = 4;
  int32 gid = 5;
}

message ExecResult {
  string result = 1;
  string error = 2;
  bool finished = 3;
}

message PullResult {
  string name = 1;
  bytes chunk = 2;
  string error = 3;
  bool finished = 4;
}

message PushIn {
  string dst = 1;
  bytes chunk = 2;
  bool isOk = 3;
}

message PushResult {
  string error = 1;
  bool isOk = 2;
}

message TerminalIn {
  // +gen:required
  string command = 1;
  map<string, string> env = 2;
  int32 uid = 3;
  int32 gid = 4;
}

message TerminalResult {
  bytes stdout = 1;
  bytes stderr = 2;
  string error = 3;
  bool isOk = 4;
}